<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Portfolio - talks</title><link href="https://aspigirlcodes.github.io/portfolio/" rel="alternate"></link><link href="https://aspigirlcodes.github.io/portfolio/feeds/talks.atom.xml" rel="self"></link><id>https://aspigirlcodes.github.io/portfolio/</id><updated>2018-06-19T00:00:00+02:00</updated><entry><title>Lithium: Trends im Digitalen Kundenerlebnis</title><link href="https://aspigirlcodes.github.io/portfolio/lithium-trends-im-digitalen-kundenerlebnis.html" rel="alternate"></link><published>2018-06-19T00:00:00+02:00</published><updated>2018-06-19T00:00:00+02:00</updated><author><name>Claudius Henrichs &amp; Rahul Hari</name></author><id>tag:aspigirlcodes.github.io,2018-06-19:/portfolio/lithium-trends-im-digitalen-kundenerlebnis.html</id><content type="html"></content><category term="talks"></category></entry><entry><title>Growing old gracefully: on being a career programmer</title><link href="https://aspigirlcodes.github.io/portfolio/growing-old-gracefully-on-being-a-career-programmer.html" rel="alternate"></link><published>2018-05-24T00:00:00+02:00</published><updated>2018-05-24T00:00:00+02:00</updated><author><name>Carlton Gibson</name></author><id>tag:aspigirlcodes.github.io,2018-05-24:/portfolio/growing-old-gracefully-on-being-a-career-programmer.html</id><summary type="html">&lt;p&gt;Software development is often seen as a young person's game. But what if, as you get older, you want to keep at the keyboard? Thoughts from a (now) veteran developer on building your career in software development for the long-haul.&lt;/p&gt;
&lt;p&gt;This is a community talk. My favourite topics from DjangoConEU …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Software development is often seen as a young person's game. But what if, as you get older, you want to keep at the keyboard? Thoughts from a (now) veteran developer on building your career in software development for the long-haul.&lt;/p&gt;
&lt;p&gt;This is a community talk. My favourite topics from DjangoConEU 2017 were the non-technical talks. The most interesting (on-topic) conversations I had were about the non-programming aspects of working in software. I wanted to give a talk on that line.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Prima facie&lt;/em&gt; I'm not the best place person to talk about diversity (white, male, etc), but, having been freelance since 2006, with four young children, and now slightly greying hair, I am in a position to talk about how to build a career in software development for the long-haul. Hiring in tech is massively ageist. I want to discuss strategies to handle that.&lt;/p&gt;
&lt;p&gt;My target audience is individual programmers (whether freelance or employed) as well as software managers, looking to build &lt;strong&gt;and retain&lt;/strong&gt; a team. (The message for managers is simply that they need to facilitate their employees' careers. This seems obvious but it &lt;strong&gt;is&lt;/strong&gt; worth bringing out.)&lt;/p&gt;
&lt;p&gt;The core point of my talk is around the idea that a career is very much a marathon rather than a sprint, and that it needs to be approached in that spirit. (Again, this may seem obvious but it &lt;strong&gt;is&lt;/strong&gt; worth bringing out.)&lt;/p&gt;
&lt;p&gt;There are two aspects of this. The one is &lt;strong&gt;pace&lt;/strong&gt;. That to work on software day-in, day-out for 10, 20, 30, 40 years (or more) we need to pace ourselves, to manage our reserves, and to have fun.&lt;/p&gt;
&lt;p&gt;The other is that there is noting to be scared of. That expertise which now may seem intimidating is, yes, available to us too. That with 5, 10, 15 years of continued effort we too (yes, us) can be as experienced as whomever, in the speciality we choose.&lt;/p&gt;
&lt;p&gt;I bring this out with three points. That we need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Be disciplined&lt;/strong&gt;: The key point is to keep going. We each need to find patterns that work for us and develop them into habits that we build into a routine. The great thing is it doesn't have to be 100 hour weeks. As long as we keep doing it, whatever we do builds up over time. Despite the impression to the contrary, time is on our side. Which leads to...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Be prolific&lt;/strong&gt;: Do lots, and put it out there. This one seems scary. "I'll never do as much as ..." — but it's an illusion. Do one thing. Put that out there. Do something else. Repeat. Again, the work builds up over time, and (seemingly) all of a sudden, you're in a position of being the expert. Finally...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Be social&lt;/strong&gt;: And I don't necessarily mean Facebook (unless Facebook is your thing). In whatever environment or medium suits you get out there meet people. (Stretch your comfort zones a bit here.) Share what you've done. Relish in what others have done. Be part of the community. Help build the community.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All three of these are essential. As you get older — all the more as you get older — they allow you to build a sustainable career writing software.&lt;/p&gt;
&lt;p&gt;This tale is brought out with stories on finding work, and on choosing clients, and employers, financial planning and job security, on family and free-time, and on the importance self-care. It's part inspiration, part battle-plan.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Accessibility Matters: Creating a Better Web</title><link href="https://aspigirlcodes.github.io/portfolio/accessibility-matters-creating-a-better-web.html" rel="alternate"></link><published>2018-05-23T00:00:00+02:00</published><updated>2018-05-23T00:00:00+02:00</updated><author><name>Lindsey Dragun</name></author><id>tag:aspigirlcodes.github.io,2018-05-23:/portfolio/accessibility-matters-creating-a-better-web.html</id><summary type="html">&lt;p&gt;Accessibility is an afterthought to many, but to those with issues navigating the web it's very important. We will go over examples of accessibility on the web, short and long term solutions, and talk about why accessibility matters to a variety of users. The audience should leave with the ability …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Accessibility is an afterthought to many, but to those with issues navigating the web it's very important. We will go over examples of accessibility on the web, short and long term solutions, and talk about why accessibility matters to a variety of users. The audience should leave with the ability to spot some accessibility issues and the knowledge of how to fix them.&lt;/p&gt;
&lt;p&gt;Accessibility is a huge topic that is often acknowledged as important...by the people who already care about it. This talk is meant to help the entire audience start thinking about accessibility and realize how easy it is to at least put some accessibility into a site (or avoid adding blatantly inaccessible content).&lt;/p&gt;
&lt;p&gt;Ten to fifteen percent of the EU has a disability, according to the EU Labour Force Survey, which is a large potential audience for any site. There are various laws that factor into the amount of web accessibility a country must have, and the consequences a business can face because of that. Accessible web development also tends to lead to better UX and a happier user base. And, another plus: It will save devs time and frustration when they’re working with the code, since good HTML is enforced.&lt;/p&gt;
&lt;p&gt;This talk will start with a broad introduction to accessibility, how to break different concerns down into categories for consideration, and touch on some laws around web accessibility. The second part will go through examples of good and bad accessibility and what to look out for, as well as ways to improve accessibility (including "easy wins" that they could implement quickly to drastically improve their sites). The final section will include resources for finding accessibility standards and also browser extensions and the like for people to check on their own.&lt;/p&gt;
&lt;p&gt;The audience will be expected to have working knowledge of the internet, webpages, and using webpages.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Making smarter queries with advanced ORM resources</title><link href="https://aspigirlcodes.github.io/portfolio/making-smarter-queries-with-advanced-orm-resources.html" rel="alternate"></link><published>2018-05-23T00:00:00+02:00</published><updated>2018-05-23T00:00:00+02:00</updated><author><name>Mariana Bedran Lesche</name></author><id>tag:aspigirlcodes.github.io,2018-05-23:/portfolio/making-smarter-queries-with-advanced-orm-resources.html</id><summary type="html">&lt;p&gt;Django ORM has lots of resources for making complex database queries and the documentation brings good examples on how to apply each one of them, but understanding how to orchestrate all of those resources on real-life projects may not be so simple. My goal with this talk is to show …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Django ORM has lots of resources for making complex database queries and the documentation brings good examples on how to apply each one of them, but understanding how to orchestrate all of those resources on real-life projects may not be so simple. My goal with this talk is to show through examples how to combine some of the QuerySet Methods, Query Expressions and other optimization techniques to make the most of DB resources when processing information inside the code is not an option.&lt;/p&gt;
&lt;p&gt;When we start modelling an application, we don’t always know how it’s models will evolve and it may be even more difficult to foresee their behaviour when big amounts of data are stored in their respective tables. With tables getting bigger through the project’s life apparently harmless operations may become impossible to make. Thankfully, databases are already prepared for dealing with large amounts of data and resource consuming operations and Django’s ORM provides solutions for most of them.&lt;/p&gt;
&lt;p&gt;For this talk I’m going to build an example Django project, populate it’s tables with big enough datasets and formulate complex questions to demand the most on the ORM’s possibilities. For each question I’m writing at least one solution using the resources described in the QueryExpressions section of Django’s Docs to then analyse the SQL generated by it and the pros and cons between operational costs and code complexity.&lt;/p&gt;
&lt;p&gt;The following topics will be covered:
* Using F() expressions for filtering, ordering and annotate operations
* Using Max, Min, Avg with annotations
* Compare Subquery expressions to queryset equivalents
* Present the new Window functions for partitioned operations
* Using Union queries&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Node Red Showcase</title><link href="https://aspigirlcodes.github.io/portfolio/node-red-showcase.html" rel="alternate"></link><published>2018-05-22T00:00:00+02:00</published><updated>2018-05-22T00:00:00+02:00</updated><author><name>Cello</name></author><id>tag:aspigirlcodes.github.io,2018-05-22:/portfolio/node-red-showcase.html</id><summary type="html">&lt;p&gt;Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.&lt;/p&gt;
&lt;p&gt;It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.&lt;/p&gt;
&lt;p&gt;It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>8 Things you need to know about autism and bilingualism</title><link href="https://aspigirlcodes.github.io/portfolio/8-things-you-need-to-know-about-autism-and-bilingualism.html" rel="alternate"></link><published>2017-10-27T00:00:00+02:00</published><updated>2017-10-27T00:00:00+02:00</updated><author><name>Bérengère Digard</name></author><id>tag:aspigirlcodes.github.io,2017-10-27:/portfolio/8-things-you-need-to-know-about-autism-and-bilingualism.html</id><summary type="html">&lt;p&gt;Knowing several languages shapes the way people interact and the way they lead their social life. But how does it work for people on the autism spectrum, who can experience specific difficulties in social interaction? To answer this question, I designed the Autism &amp;amp; Bilingualism Census (ABC), an online survey addressed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Knowing several languages shapes the way people interact and the way they lead their social life. But how does it work for people on the autism spectrum, who can experience specific difficulties in social interaction? To answer this question, I designed the Autism &amp;amp; Bilingualism Census (ABC), an online survey addressed to all adults on the autism spectrum, monolinguals and multilinguals alike. By focusing on both the language exposure and use, and the general life satisfaction and social involvement of the participants, the ABC is new, unique, and valuable tool to understand how knowing several languages influences the way adults on the autism spectrum lead their social life. The ABC also brings to light this population often overlooked that are bilinguals and multilinguals on the autism spectrum. The ABC will be completed by the summer 2017.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Lerne weitere germanische Sprachen mit Hilfe der historischen Linguistik</title><link href="https://aspigirlcodes.github.io/portfolio/lerne-weitere-germanische-sprachen-mit-hilfe-der-historischen-linguistik.html" rel="alternate"></link><published>2017-10-27T00:00:00+02:00</published><updated>2017-10-27T00:00:00+02:00</updated><author><name>Ellen de Visser</name></author><id>tag:aspigirlcodes.github.io,2017-10-27:/portfolio/lerne-weitere-germanische-sprachen-mit-hilfe-der-historischen-linguistik.html</id><summary type="html">&lt;p&gt;In diesem Vortrag nehme ich das Publikum mit auf eine Reise durch die Geschichte der germanischen Sprachen und erkläre das grimmsche Gesetz, wie eine Sprache sich durch die Zeit verändern kann und was die größten Faktoren dabei sind. Warum sagt jeder, dass Niederländisch eine Mischung aus Deutsch und Englisch sei …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In diesem Vortrag nehme ich das Publikum mit auf eine Reise durch die Geschichte der germanischen Sprachen und erkläre das grimmsche Gesetz, wie eine Sprache sich durch die Zeit verändern kann und was die größten Faktoren dabei sind. Warum sagt jeder, dass Niederländisch eine Mischung aus Deutsch und Englisch sei? Warum sind diese drei Sprachen so ähnlich und wie kann man leicht mit Hintergrundwissen dieser Sprachen neues Vokabular lernen? Und wie kommt es zum Gebrauch des ‚Denglischen‘? Am Ende des Vortrages werde ich die Lautverschiebungsgesetze mit dem Publikum üben und zeigen, wie leicht es ist, sein Vokabular bei diesen Sprachen zu erweitern. Ein Beispiel: wenn man weiß, dass das t zu einem s wird, weiß man, dass das niederländische ‚water‘ im Deutschen ‚Wasser‘ bedeutet. Wenn man sich diesen allgemeinen Regeln bewusst ist, kann man, schon wenn man anfängt eine dieser Sprachen zu lernen, beispielsweise schneller einen Text lesen und verstehen.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Turkic Languages, Multilingualism and Polyglottery</title><link href="https://aspigirlcodes.github.io/portfolio/turkic-languages-multilingualism-and-polyglottery.html" rel="alternate"></link><published>2017-10-27T00:00:00+02:00</published><updated>2017-10-27T00:00:00+02:00</updated><author><name>Johan Vandewalle</name></author><id>tag:aspigirlcodes.github.io,2017-10-27:/portfolio/turkic-languages-multilingualism-and-polyglottery.html</id><summary type="html">&lt;p&gt;Throughout the centuries, Turkic languages (41 in number according to Ethnologue) have been spoken over a vast, nearly continuous area, stretching out from the Balkans in the west to Siberia and the Chinese Wall in the east. Recently, the Turkish diaspora, with more than 4 million people of Turkish origin …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Throughout the centuries, Turkic languages (41 in number according to Ethnologue) have been spoken over a vast, nearly continuous area, stretching out from the Balkans in the west to Siberia and the Chinese Wall in the east. Recently, the Turkish diaspora, with more than 4 million people of Turkish origin in Western Europe, was added to this area. This broad dispersion of the Turkic languages has led to numerous multilingual situations, in which Turkic languages came into contact with genetically and typologically quite different language families: Indo-European (Slavic, Albanian, Greek, Iranian, Armenian), Semitic (Arabic), Sino-Tibetan, Mongolic and Tungusic. This contact often yielded linguistically fascinating results in both the Turkic and the non-Turkic languages. All of this makes turcology a very demanding study as to the required knowledge of languages by researchers. It is therefore not surprising that many of the well known turcologists are or have been polyglots. The aim of this talk is to give an overview of this huge variety of multilingual situations, demonstrating with clear examples the linguistic effects of the language contact and discussing the requirements as to the knowledge of foreign languages by researchers. Finally, a number of famous turcologists will pass in review and their knowledge of foreign languages will be described.&lt;/p&gt;</content><category term="talks"></category></entry><entry><title>Python, Locales and Writing Systems</title><link href="https://aspigirlcodes.github.io/portfolio/python-locales-and-writing-systems.html" rel="alternate"></link><published>2017-02-17T00:00:00+01:00</published><updated>2017-02-17T00:00:00+01:00</updated><author><name>Rae Knowler</name></author><id>tag:aspigirlcodes.github.io,2017-02-17:/portfolio/python-locales-and-writing-systems.html</id><content type="html">&lt;p&gt;Python 3 removes a lot of the confusion around Unicode handling in Python, but that by no means fixes everything. Different locales and writing systems have unique behaviours that can trip you up. Here's some of the worst ones and how to handle them correctly.&lt;/p&gt;</content><category term="talks"></category></entry></feed>